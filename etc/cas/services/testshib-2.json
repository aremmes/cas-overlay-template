{
  @class: org.apereo.cas.support.saml.services.SamlRegisteredService
  serviceId: https://sp.testshib.org/shibboleth-sp
  name: testshibsp
  id: 2
  description: TestShib Test SP
  metadataLocation: http://www.testshib.org/metadata/testshib-providers.xml
  signAssertions: false
  signResponses: true
  encryptAssertions: false
  evaluationOrder: 0
  usernameAttributeProvider:
  {
    @class: org.apereo.cas.services.PrincipalAttributeRegisteredServiceUsernameProvider
    usernameAttribute: "urn:oid:0.9.2342.19200300.100.1.3"
    canonicalizationMode: NONE
    encryptedUsername: false
  }
  attributeNameFormats:
  {
    @class: java.util.HashMap
    gender: basic
    "urn:oid:2.16.840.1.113730.3.1.241": uri
    "urn:oid:2.5.4.42": uri
    "urn:oid:2.5.4.4": uri
    url: basic
    "urn:oid:0.9.2342.19200300.100.1.60": uri
    "urn:oid:2.16.840.1.113730.3.1.39": uri
    "urn:oid:0.9.2342.19200300.100.1.3": uri
    "urn:oid:0.9.2342.19200300.100.1.1": uri
  }
  attributeReleasePolicy:
  {
    @class: org.apereo.cas.services.ReturnMappedAttributeReleasePolicy
    allowedAttributes:
    {
        @class: java.util.TreeMap
        gender: gender
        displayName: "urn:oid:2.16.840.1.113730.3.1.241"
        name.givenName: "urn:oid:2.5.4.42"
        name.familyName: "urn:oid:2.5.4.4"
        url: url
        image.url: "urn:oid:0.9.2342.19200300.100.1.60"
        language: "urn:oid:2.16.840.1.113730.3.1.39"
        "urn:oid:0.9.2342.19200300.100.1.3": "groovy { return attributes['emails'][0].getEmail() }"
        "urn:oid:0.9.2342.19200300.100.1.1": "groovy { return attributes['emails'][0].getEmail().replaceFirst(/@.*$/,'') }"
    }
    principalAttributesRepository:
    {
      @class: org.apereo.cas.authentication.principal.DefaultPrincipalAttributesRepository
      expiration: 2
      timeUnit: HOURS
    }
    authorizedToReleaseCredentialPassword: false
    authorizedToReleaseProxyGrantingTicket: false
    excludeDefaultAttributes: false
  }
  multifactorPolicy:
  {
    @class: org.apereo.cas.services.DefaultRegisteredServiceMultifactorPolicy
    failureMode: CLOSED
    bypassEnabled: false
  }
  accessStrategy:
  {
    @class: org.apereo.cas.services.DefaultRegisteredServiceAccessStrategy
    enabled: true
    ssoEnabled: true
    requireAllAttributes: true
    caseInsensitive: false
  }
}
